{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAkCA,SAASC,EAAcC,EAAUC,EAAQC,GACrC,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAG9C,OADEC,QAAQC,IAAIR,GACP,IAAIS,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACAF,EAAQ,C,SAAEX,E,OAAUC,IAEpBW,EAAO,C,SAAEZ,E,OAAUC,GAAS,GAE/BA,EAAO,G,CA5CLgB,SAASC,cAAc,SAyD/BC,iBAAiB,UArDxB,SAAmBjB,GACfA,EAAEkB,iBACF,MAAMjB,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAChD,GAAGJ,EAAMkB,MAAQ,GAAKjB,EAAKiB,MAAQ,GAAKhB,EAAOgB,MAAQ,EACnDC,EAAAzB,GAAS0B,OAAOC,QAAQ,sCAD5B,CAOA,IAAK,IAAIC,EAAE,EAAGA,GAAGC,OAAOrB,EAAOgB,OAAO,EAAGI,IAAI,CACzC,MAAMxB,GAASG,EAAKiB,MAAQI,IAAKtB,EAAMkB,MACvC,IAAIrB,EAAWyB,EAAE,EACjB1B,EAAcC,EAAUC,EAAOC,GAAGyB,MAAK,KACnCL,EAAAzB,GAAS0B,OAAOK,QACZ,uBAAqB5B,QAAiBC,MAAW,IAEtD4B,OAAM,KACLP,EAAAzB,GAAS0B,OAAOO,QACZ,sBAAoB9B,QAAeC,MAAW,G,CAK1DC,EAAEI,cAAcyB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\n \n\nfunction startFunc(e) {\n    e.preventDefault();\n    const { delay, step, amount } = e.currentTarget.elements;\n    if(delay.value < 0 || step.value < 0 || amount.value < 0){\n        Notiflix.Notify.warning(`Please enter a positive number`);\n        return;\n    } \n    else{\n\n\n    for (let i=0; i<=Number(amount.value)-1; i++){\n        const delays= +step.value * i + +delay.value; \n        let position = i+1;\n        createPromise(position, delays,e).then(()=>{\n            Notiflix.Notify.success(\n                `✅ Fulfilled promise ${position} in ${delays}ms`\n              );\n        }).catch(()=>{\n            Notiflix.Notify.failure(\n                `❌ Rejected promise ${position} in ${delays}ms`\n              );\n        })\n\n    }\n    e.currentTarget.reset();\n}\n}\n\nfunction createPromise(position, delays, e) {\n    const { delay, step, amount } = e.currentTarget.elements;\n\n        console.log(delays);\n      return new Promise((resolve, reject) => {\n          const shouldResolve = Math.random() > 0.3;\n          setTimeout(()=>{\n            if (shouldResolve) {\n                resolve({ position, delays });\n            } else {\n                reject({ position, delays });\n            }\n          }, delays);\n          \n\n      })\n      \n  }\n\n  \n  \n\n\n\n\nformEl.addEventListener(\"submit\", startFunc);\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delays","e","delay","step","amount","currentTarget","elements","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","document","querySelector","addEventListener","preventDefault","value","$parcel$interopDefault","Notify","warning","i","Number","then","success","catch","failure","reset"],"version":3,"file":"03-promises.cb88a727.js.map"}