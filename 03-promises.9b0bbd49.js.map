{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAuD/BC,iBAAiB,UAnDxB,SAAmBC,G,kBAKX,IAAMC,GAASC,EAAKC,MAAQC,IAAKC,EAAMF,MACnCG,EAAWF,EAAE,GAezB,SAAuBE,EAAUL,EAAQD,GACrC,IAAgCO,EAAAP,EAAEQ,cAAcC,SAAxCJ,EAAwBE,EAAxBF,MAAOH,EAAiBK,EAAjBL,KAAMQ,EAAWH,EAAXG,OAErB,KAAGL,EAAMF,MAAQ,GAAKD,EAAKC,MAAQ,GAAKO,EAAOP,MAAQ,GAMrD,OADEQ,QAAQC,IAAIX,GACP,IAAIY,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACAF,EAAQ,CAAER,WAAUL,WAEpBc,EAAO,CAAET,WAAUL,U,GAEtBA,E,IAbLmB,EAAAzB,GAAS0B,OAAOC,QAAS,iC,EAlBzBC,CAAcjB,EAAUL,EAAOD,GAAGwB,MAAK,WACnCJ,EAAAzB,GAAS0B,OAAOI,QACZ,uBAAwCC,OAAfpB,EAAS,QAAaoB,OAAPzB,EAAO,M,IAEpD0B,OAAM,WACLP,EAAAzB,GAAS0B,OAAOO,QACZ,sBAAqCF,OAAfpB,EAAS,QAAaoB,OAAPzB,EAAO,M,KAZxDD,EAAE6B,iBAGF,IAFA,IAAgCtB,EAAAP,EAAEQ,cAAcC,SAAxCJ,EAAwBE,EAAxBF,MAAOH,EAAiBK,EAAjBL,KAAMQ,EAAWH,EAAXG,OAEZoB,EAAE,EAAGA,GAAGC,OAAOrB,EAAOP,OAAO,EAAG2B,IAAGE,EAAAF,GAc5C9B,EAAEQ,cAAcyB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\n \n\nfunction startFunc(e) {\n    e.preventDefault();\n    const { delay, step, amount } = e.currentTarget.elements;\n       \n    for (let i=0; i<=Number(amount.value)-1; i++){\n        const delays= +step.value * i + +delay.value; \n        let position = i+1;\n        createPromise(position, delays,e).then(()=>{\n            Notiflix.Notify.success(\n                `✅ Fulfilled promise ${position} in ${delays}ms`\n              );\n        }).catch(()=>{\n            Notiflix.Notify.failure(\n                `❌ Rejected promise ${position} in ${delays}ms`\n              );\n        })\n\n    }\n    e.currentTarget.reset();\n}\n\nfunction createPromise(position, delays, e) {\n    const { delay, step, amount } = e.currentTarget.elements;\n\n    if(delay.value < 0 || step.value < 0 || amount.value < 0){\n        Notiflix.Notify.warning(`Please enter a positive number`);\n  }\n  else{\n    \n        console.log(delays);\n      return new Promise((resolve, reject) => {\n          const shouldResolve = Math.random() > 0.3;\n          setTimeout(()=>{\n            if (shouldResolve) {\n                resolve({ position, delays });\n            } else {\n                reject({ position, delays });\n            }\n          }, delays);\n          \n\n      })\n      \n  }\n\n  \n  \n}\n\n\n\nformEl.addEventListener(\"submit\", startFunc);\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","delays","step","value","i","delay","position","_elements","currentTarget","elements","amount","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","warning","$ce04d3a99e08e73b$var$createPromise","then","success","concat","catch","failure","preventDefault","i1","Number","_loop","reset"],"version":3,"file":"03-promises.9b0bbd49.js.map"}