{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SA2BA,SAASC,EAAcC,EAAUC,EAAQC,GACrC,MAAMC,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAEhD,KAAGJ,EAAMK,MAAQ,GAAKJ,EAAKI,MAAQ,GAAKH,EAAOG,MAAQ,GAMrD,OADEC,QAAQC,IAAIT,GACP,IAAIU,SAAQ,CAACC,EAASC,KACzB,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACAF,EAAQ,C,SAAEZ,E,OAAUC,IAEpBY,EAAO,C,SAAEb,E,OAAUC,GAAS,GAE/BA,EAAO,IAbZiB,EAAArB,GAASsB,OAAOC,QAAQ,iC,CA7BjBC,SAASC,cAAc,SAuD/BC,iBAAiB,UAnDxB,SAAmBrB,GACfA,EAAEsB,iBACF,MAAMrB,MAAEA,EAAKC,KAAEA,EAAIC,OAAEA,GAAWH,EAAEI,cAAcC,SAEhD,IAAK,IAAIkB,EAAE,EAAGA,GAAGC,OAAOrB,EAAOG,OAAO,EAAGiB,IAAI,CACzC,MAAMxB,GAASG,EAAKI,MAAQiB,IAAKtB,EAAMK,MACvC,IAAIR,EAAWyB,EAAE,EACjB1B,EAAcC,EAAUC,EAAOC,GAAGyB,MAAK,KACnCT,EAAArB,GAASsB,OAAOS,QACZ,uBAAqB5B,QAAiBC,MAAW,IAEtD4B,OAAM,KACLX,EAAArB,GAASsB,OAAOW,QACZ,sBAAoB9B,QAAeC,MAAW,G,CAK1DC,EAAEI,cAAcyB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\n \n\nfunction startFunc(e) {\n    e.preventDefault();\n    const { delay, step, amount } = e.currentTarget.elements;\n       \n    for (let i=0; i<=Number(amount.value)-1; i++){\n        const delays= +step.value * i + +delay.value; \n        let position = i+1;\n        createPromise(position, delays,e).then(()=>{\n            Notiflix.Notify.success(\n                `✅ Fulfilled promise ${position} in ${delays}ms`\n              );\n        }).catch(()=>{\n            Notiflix.Notify.failure(\n                `❌ Rejected promise ${position} in ${delays}ms`\n              );\n        })\n\n    }\n    e.currentTarget.reset();\n}\n\nfunction createPromise(position, delays, e) {\n    const { delay, step, amount } = e.currentTarget.elements;\n\n    if(delay.value < 0 || step.value < 0 || amount.value < 0){\n        Notiflix.Notify.warning(`Please enter a positive number`);\n  }\n  else{\n    \n        console.log(delays);\n      return new Promise((resolve, reject) => {\n          const shouldResolve = Math.random() > 0.3;\n          setTimeout(()=>{\n            if (shouldResolve) {\n                resolve({ position, delays });\n            } else {\n                reject({ position, delays });\n            }\n          }, delays);\n          \n\n      })\n      \n  }\n\n  \n  \n}\n\n\n\nformEl.addEventListener(\"submit\", startFunc);\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delays","e","delay","step","amount","currentTarget","elements","value","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","warning","document","querySelector","addEventListener","preventDefault","i","Number","then","success","catch","failure","reset"],"version":3,"file":"03-promises.a1be1533.js.map"}