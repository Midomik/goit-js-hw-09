{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEeC,SAASC,cAAc,SAyD/BC,iBAAiB,UArDxB,SAAmBC,GACfA,EAAEC,iBACF,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBG,MAAOC,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACrB,GAAGF,EAAMG,MAAQ,GAAKF,EAAKE,MAAQ,GAAKD,EAAOC,MAAQ,EACnDC,EAAAd,GAASe,OAAOC,QAAS,sCAD7B,CAOA,I,kBACI,IAAMC,GAASN,EAAKE,MAAQK,IAAKR,EAAMG,MACnCM,EAAWD,EAAE,GAgBzB,SAAuBC,EAAUF,EAAQZ,GACrC,IAAgCE,EAAAF,EAAEG,cAAcC,SAAhBF,EAAxBG,MAAwBH,EAAjBI,KAAiBJ,EAAXK,OAGnB,OADEQ,QAAQC,IAAIJ,GACP,IAAIK,SAAQ,SAACC,EAASC,GACzB,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACAF,EAAQ,CAAEJ,WAAUF,WAEpBO,EAAO,CAAEL,WAAUF,U,GAEtBA,E,KA3BLY,CAAcV,EAAUF,EAAOZ,GAAGyB,MAAK,WACnChB,EAAAd,GAASe,OAAOgB,QACZ,uBAAwCC,OAAfb,EAAS,QAAaa,OAAPf,EAAO,M,IAEpDgB,OAAM,WACLnB,EAAAd,GAASe,OAAOmB,QACZ,sBAAqCF,OAAfb,EAAS,QAAaa,OAAPf,EAAO,M,KAT/CkB,EAAE,EAAGA,GAAGC,OAAOxB,EAAOC,OAAO,EAAGsB,IAAGE,EAAAF,GAc5C9B,EAAEG,cAAc8B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector(\".form\");\n\n \n\nfunction startFunc(e) {\n    e.preventDefault();\n    const { delay, step, amount } = e.currentTarget.elements;\n    if(delay.value < 0 || step.value < 0 || amount.value < 0){\n        Notiflix.Notify.warning(`Please enter a positive number`);\n        return;\n    } \n    else{\n\n\n    for (let i=0; i<=Number(amount.value)-1; i++){\n        const delays= +step.value * i + +delay.value; \n        let position = i+1;\n        createPromise(position, delays,e).then(()=>{\n            Notiflix.Notify.success(\n                `✅ Fulfilled promise ${position} in ${delays}ms`\n              );\n        }).catch(()=>{\n            Notiflix.Notify.failure(\n                `❌ Rejected promise ${position} in ${delays}ms`\n              );\n        })\n\n    }\n    e.currentTarget.reset();\n}\n}\n\nfunction createPromise(position, delays, e) {\n    const { delay, step, amount } = e.currentTarget.elements;\n\n        console.log(delays);\n      return new Promise((resolve, reject) => {\n          const shouldResolve = Math.random() > 0.3;\n          setTimeout(()=>{\n            if (shouldResolve) {\n                resolve({ position, delays });\n            } else {\n                reject({ position, delays });\n            }\n          }, delays);\n          \n\n      })\n      \n  }\n\n  \n  \n\n\n\n\nformEl.addEventListener(\"submit\", startFunc);\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["$6JpON","parcelRequire","document","querySelector","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay","step","amount","value","$parcel$interopDefault","Notify","warning","delays","i","position","console","log","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$createPromise","then","success","concat","catch","failure","i1","Number","_loop","reset"],"version":3,"file":"03-promises.1aa778d0.js.map"}